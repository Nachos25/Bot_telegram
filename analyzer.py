import asyncio
import logging
from typing import Dict
from tiktok_api import TikTokAPI
from data_processor import DataProcessor
from config import Config

logger = logging.getLogger(__name__)


class TikTokAnalyzer:
    def __init__(self):
        self.api = TikTokAPI()
        self.processor = DataProcessor()
        self.search_settings = {
            'max_followers': Config.DEFAULT_MAX_FOLLOWERS,
            'min_views': Config.DEFAULT_MIN_VIEWS,
            'min_videos': Config.DEFAULT_MIN_VIDEOS
        }
    
    def update_settings(self, max_followers: int = None,
                        min_views: int = None,
                        min_videos: int = None):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞"""
        if max_followers is not None:
            self.search_settings['max_followers'] = max_followers
        if min_views is not None:
            self.search_settings['min_views'] = min_views
        if min_videos is not None:
            self.search_settings['min_videos'] = min_videos
        
        logger.info(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {self.search_settings}")
    
    def get_current_settings(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —á–∏—Ç–∞–µ–º–æ–º –≤–∏–¥–µ"""
        return f"""
üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞:

‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤: {self.search_settings['max_followers']:,}
‚Ä¢ –ú–∏–Ω–∏–º—É–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤–∏–¥–µ–æ: {self.search_settings['min_views']:,}
‚Ä¢ –ú–∏–Ω–∏–º—É–º –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∏–¥–µ–æ: {self.search_settings['min_videos']}

–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /settings
        """.strip()
    
    async def analyze_account(self, url_or_username: str,
                              progress_callback=None) -> Dict:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç –∏ –µ–≥–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤"""
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        self.processor.clear_results()
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ URL
        username = self.api.extract_username_from_url(url_or_username)
        if not username:
            username = url_or_username.replace('@', '')
        
        logger.info(f"–ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞: {username}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        if progress_callback:
            await progress_callback("üìã –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ...")
        
        user_info = self.api.get_user_info(username)
        if not user_info:
            return {
                'success': False,
                'error': f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ {username}'
            }
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤
        if progress_callback:
            await progress_callback("üë• –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤...")
        
        followers = self.api.get_user_followers(
            username, 
            Config.MAX_FOLLOWERS_PER_SEARCH
        )
        
        if not followers:
            return {
                'success': False,
                'error': f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ –¥–ª—è {username}'
            }
        
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(followers)} —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–∞
        total_followers = len(followers)
        analyzed_count = 0
        micro_influencers_found = 0
        
        for i, follower in enumerate(followers):
            follower_username = follower.get('uniqueId')
            if not follower_username:
                continue
            
            analyzed_count += 1
            
            if progress_callback:
                progress_text = (
                    f"üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ–ª–ª–æ–≤–µ—Ä–∞ {analyzed_count}/{total_followers}\n"
                    f"üë§ @{follower_username}\n"
                    f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–∏–∫—Ä–æ-–∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–æ–≤: {micro_influencers_found}"
                )
                await progress_callback(progress_text)
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–µ
            follower_info = self.api.get_user_info(follower_username)
            if not follower_info:
                continue
            
            # –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–∞
            follower_videos = self.api.get_user_videos(follower_username, 20)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –º–∏–∫—Ä–æ-–∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–∞
            is_micro_influencer = self.api.check_micro_influencer_criteria(
                follower_info,
                follower_videos,
                self.search_settings['max_followers'],
                self.search_settings['min_views'],
                self.search_settings['min_videos']
            )
            
            if is_micro_influencer:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º email –∏–∑ –±–∏–æ
                bio = follower_info.get('signature', '')
                email = self.api.extract_email_from_bio(bio)
                
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ —Å –≤—ã—Å–æ–∫–∏–º–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏
                high_view_videos = sum(
                    1 for video in follower_videos
                    if video.get('playCount', 0) >= self.search_settings['min_views']
                )
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                self.processor.add_micro_influencer(follower_info, email)
                self.processor.update_video_stats(follower_username, high_view_videos)
                
                micro_influencers_found += 1
                
                logger.info(
                    f"–ù–∞–π–¥–µ–Ω –º–∏–∫—Ä–æ-–∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä: @{follower_username} "
                    f"({follower_info.get('followerCount', 0)} —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤, "
                    f"{high_view_videos} –≤–∏–¥–µ–æ —Å –≤—ã—Å–æ–∫–∏–º–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏)"
                )
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await asyncio.sleep(0.5)
        
        # –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª
        if progress_callback:
            await progress_callback("üìä –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏...")
        
        excel_file = self.processor.create_excel_file()
        
        return {
            'success': True,
            'total_followers_analyzed': analyzed_count,
            'micro_influencers_found': micro_influencers_found,
            'excel_file': excel_file,
            'summary': self.processor.get_results_summary()
        } 