import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (Application, CommandHandler, MessageHandler,
                          CallbackQueryHandler, filters, ContextTypes)
from telegram.constants import ParseMode
from analyzer import TikTokAnalyzer
from config import Config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
analyzer = TikTokAnalyzer()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = """
üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TikTok Analyzer Bot!

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –º–∏–∫—Ä–æ-–∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–æ–≤ –≤ TikTok.

üî• –ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –ò—Å–∫–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º (–Ω–æ–≤–æ–µ!)
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
‚Ä¢ –ù–∞—Ö–æ–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–µ–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤
‚Ä¢ –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤–∏–¥–µ–æ
‚Ä¢ –ò–∑–≤–ª–µ–∫–∞—Ç—å email –∞–¥—Ä–µ—Å–∞ –∏–∑ –±–∏–æ
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å Excel –æ—Ç—á–µ—Ç—ã

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/search - –ø–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
/analyze @username - –∞–Ω–∞–ª–∏–∑ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ –∞–∫–∫–∞—É–Ω—Ç–∞
/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
/help - —Å–ø—Ä–∞–≤–∫–∞

üöÄ –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ:
/search - –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
/analyze @username - –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤
    """
    
    keyboard = [
        [InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤", 
                             callback_data="search")],
        [InlineKeyboardButton("üìä –ê–Ω–∞–ª–∏–∑ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤", 
                             callback_data="analyze")],
        [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é TikTok Analyzer Bot

üîç –ö–æ–º–∞–Ω–¥—ã:
‚Ä¢ `/start` - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
‚Ä¢ `/search` - –ø–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
‚Ä¢ `/analyze @username` - –∞–Ω–∞–ª–∏–∑ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ –∞–∫–∫–∞—É–Ω—Ç–∞
‚Ä¢ `/settings` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø–æ–∏—Å–∫–∞
‚Ä¢ `/help` - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞:
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤: {max_followers:,}
‚Ä¢ –ú–∏–Ω–∏–º—É–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤–∏–¥–µ–æ: {min_views:,}
‚Ä¢ –ú–∏–Ω–∏–º—É–º –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∏–¥–µ–æ: {min_videos}

üìä –§–æ—Ä–º–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
–ë–æ—Ç —Å–æ–∑–¥–∞—Å—Ç Excel —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏:
‚Ä¢ –ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ Email (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –≤ –±–∏–æ)
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤
‚Ä¢ –ü–æ–ª–Ω–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è
‚Ä¢ –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–∏–¥–µ–æ

‚è±Ô∏è –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:
–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤. –ü—Ä–∏–º–µ—Ä–Ω–æ 1-2 —Å–µ–∫—É–Ω–¥—ã –Ω–∞ –∫–∞–∂–¥–æ–≥–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–∞.

‚ùó –í–∞–∂–Ω–æ:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –±–µ–∑ —Å–∏–º–≤–æ–ª–∞ @
‚Ä¢ –ë–æ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 50 —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ –∑–∞ —Ä–∞–∑

üí° –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ:
/search - –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
/analyze @username - –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤
    """.format(
        max_followers=analyzer.search_settings['max_followers'],
        min_views=analyzer.search_settings['min_views'],
        min_videos=analyzer.search_settings['min_videos']
    )
    
    await update.message.reply_text(help_text)


async def settings_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings"""
    settings_text = analyzer.get_current_settings()
    
    keyboard = [
        [InlineKeyboardButton("üë• –ò–∑–º–µ–Ω–∏—Ç—å –º–∞–∫—Å. —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤", 
                              callback_data="set_followers")],
        [InlineKeyboardButton("üëÄ –ò–∑–º–µ–Ω–∏—Ç—å –º–∏–Ω. –ø—Ä–æ—Å–º–æ—Ç—Ä—ã", 
                              callback_data="set_views")],
        [InlineKeyboardButton("üé¨ –ò–∑–º–µ–Ω–∏—Ç—å –º–∏–Ω. –≤–∏–¥–µ–æ", 
                              callback_data="set_videos")],
        [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", 
                              callback_data="reset_settings")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(settings_text, reply_markup=reply_markup)


async def search_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /search - –ø–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    search_text = """
üîç –ü–æ–∏—Å–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º

–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ TikTok –∞–∫–∫–∞—É–Ω—Ç–æ–≤.

–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:
‚Ä¢ `food blogger` - –ø–æ–∏—Å–∫ —Ñ—É–¥-–±–ª–æ–≥–µ—Ä–æ–≤
‚Ä¢ `fitness` - –ø–æ–∏—Å–∫ —Ñ–∏—Ç–Ω–µ—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤  
‚Ä¢ `beauty` - –ø–æ–∏—Å–∫ –±—å—é—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ `travel` - –ø–æ–∏—Å–∫ —Ç—Ä–µ–≤–µ–ª –±–ª–æ–≥–µ—Ä–æ–≤

‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞:
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤: {max_followers:,}
‚Ä¢ –ú–∏–Ω–∏–º—É–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤–∏–¥–µ–æ: {min_views:,}
‚Ä¢ –ú–∏–Ω–∏–º—É–º –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∏–¥–µ–æ: {min_videos}

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:
    """.format(
        max_followers=analyzer.search_settings['max_followers'],
        min_views=analyzer.search_settings['min_views'],
        min_videos=analyzer.search_settings['min_videos']
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states[update.effective_user.id] = 'waiting_search_query'
    
    await update.message.reply_text(search_text, parse_mode=ParseMode.MARKDOWN)


async def analyze_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /analyze"""
    if context.args:
        username = ' '.join(context.args)
        await start_analysis(update, username)
    else:
        await update.message.reply_text(
            "‚ùó –£–∫–∞–∂–∏—Ç–µ username –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n\n"
            "–ü—Ä–∏–º–µ—Ä: `/analyze food_lover_mike`\n"
            "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok –∞–∫–∫–∞—É–Ω—Ç",
            parse_mode=ParseMode.MARKDOWN
        )


async def start_analysis(update: Update, username: str):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞"""
    progress_message = await update.message.reply_text(
        f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ @{username}...\n"
        "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."
    )
    
    async def update_progress(text: str):
        try:
            await progress_message.edit_text(text)
        except Exception:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        result = await analyzer.analyze_account(username, update_progress)
        
        if result['success']:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            summary_text = f"""
‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤: {result['total_followers_analyzed']}
‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –º–∏–∫—Ä–æ-–∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–æ–≤: {result['micro_influencers_found']}

{result['summary']}
            """
            
            await progress_message.edit_text(summary_text)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Excel —Ñ–∞–π–ª
            if result['excel_file']:
                try:
                    with open(result['excel_file'], 'rb') as file:
                        await update.message.reply_document(
                            document=file,
                            filename=result['excel_file'],
                            caption="üìã Excel —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏."
                        )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞: {e}")
                    await update.message.reply_text(
                        f"‚ùó –§–∞–π–ª —Å–æ–∑–¥–∞–Ω ({result['excel_file']}), "
                        "–Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ."
                    )
        else:
            await progress_message.edit_text(
                f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {result['error']}"
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∞–Ω–∞–ª–∏–∑–µ: {e}")
        await progress_message.edit_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}"
        )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    text = update.message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in user_states:
        state = user_states[user_id]
        
        if state == 'waiting_search_query':
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
            del user_states[user_id]
            await update.message.reply_text(
                "üîç –ü–æ–∏—Å–∫ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /analyze –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞–∫–∫–∞—É–Ω—Ç–∞.\n\n"
                "–ü—Ä–∏–º–µ—Ä: /analyze food_lover_mike"
            )
            return
        
        elif state.startswith('setting_'):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            await handle_setting_input(update, context, state, text)
            return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ TikTok —Å—Å—ã–ª–∫–æ–π –∏–ª–∏ username
    if 'tiktok.com' in text or text.startswith('@'):
        username = text
        if username.startswith('@'):
            username = username[1:]
        await start_analysis(update, username)
    else:
        await update.message.reply_text(
            "‚ùì –ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É.\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ:\n"
            "‚Ä¢ /start - –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã\n"
            "‚Ä¢ /help - –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏\n"
            "‚Ä¢ /analyze @username - –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
            "‚Ä¢ –°—Å—ã–ª–∫—É –Ω–∞ TikTok –∞–∫–∫–∞—É–Ω—Ç"
        )


async def handle_setting_input(update: Update, 
                               context: ContextTypes.DEFAULT_TYPE, 
                               state: str, text: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    try:
        value = int(text)
        user_id = update.effective_user.id
        
        if state == 'setting_followers':
            analyzer.update_settings(max_followers=value)
            await update.message.reply_text(
                f"‚úÖ –ú–∞–∫—Å–∏–º—É–º —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω: {value:,}"
            )
        elif state == 'setting_views':
            analyzer.update_settings(min_views=value)
            await update.message.reply_text(
                f"‚úÖ –ú–∏–Ω–∏–º—É–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω: {value:,}"
            )
        elif state == 'setting_videos':
            analyzer.update_settings(min_videos=value)
            await update.message.reply_text(
                f"‚úÖ –ú–∏–Ω–∏–º—É–º –≤–∏–¥–µ–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {value}"
            )
        
        del user_states[user_id]
        
    except ValueError:
        await update.message.reply_text(
            "‚ùó –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ."
        )


async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()
    
    data = query.data
    user_id = update.effective_user.id
    
    if data == "search":
        await search_command(update, context)
    
    elif data == "analyze":
        await query.message.reply_text(
            "üìä –í–≤–µ–¥–∏—Ç–µ username –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "‚Ä¢ `food_lover_mike`\n"
            "‚Ä¢ `@pet_lover_emma`\n"
            "‚Ä¢ `https://www.tiktok.com/@username`",
            parse_mode=ParseMode.MARKDOWN
        )
    
    elif data == "settings":
        await settings_command(update, context)
    
    elif data == "set_followers":
        user_states[user_id] = 'setting_followers'
        await query.message.reply_text(
            "üë• –í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤:"
        )
    
    elif data == "set_views":
        user_states[user_id] = 'setting_views'
        await query.message.reply_text(
            "üëÄ –í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –¥–ª—è –≤–∏–¥–µ–æ:"
        )
    
    elif data == "set_videos":
        user_states[user_id] = 'setting_videos'
        await query.message.reply_text(
            "üé¨ –í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ —Å –≤—ã—Å–æ–∫–∏–º–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏:"
        )
    
    elif data == "reset_settings":
        analyzer.update_settings(
            max_followers=Config.DEFAULT_MAX_FOLLOWERS,
            min_views=Config.DEFAULT_MIN_VIEWS,
            min_videos=Config.DEFAULT_MIN_VIDEOS
        )
        await query.message.reply_text(
            "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\n\n" +
            analyzer.get_current_settings()
        )


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    if not Config.TELEGRAM_BOT_TOKEN:
        logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    if not Config.RAPIDAPI_KEY:
        logger.error("RAPIDAPI_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Application.builder().token(Config.TELEGRAM_BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("settings", settings_command))
    app.add_handler(CommandHandler("search", search_command))
    app.add_handler(CommandHandler("analyze", analyze_command))
    app.add_handler(CallbackQueryHandler(handle_callback))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, 
                                   handle_message))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º TikTok Analyzer Bot...")
    app.run_polling()


if __name__ == '__main__':
    main() 